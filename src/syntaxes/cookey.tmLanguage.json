{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "CookeyLang",

	"patterns": [{
		"include": "#comments"
	}, {
		"include": "#decl"
	}, {
		"include": "#stmt"
	}, {
		"include": "#strings"
	}, {
		"include": "#keywords"
	}, {
		"include": "#shebang"
	}],

	"repository": {
		"shebang": {
			"name": "comment.line.shebang.cookey",
			"match": "\\A(#!).*(?=$)",
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.cookey"
				}
			}
		},

		"keywords": {
			"patterns": [{
				"name": "keyword.control.cookey",
				"match": "\\b(ret|or|and|deleteVariable|break|switch|case|default|do)\\b"
			}, {
				"name": "constant.numeric.cookey",
				"match": "(?:\\d|_)(?:\\.(?:\\d|_)+)?"
			}, {
				"name": "keyword.operator.cookey",
				"match": "[+*\\/=%\\-<>^;\\.{}()@?:]"
			}, {
				"name": "constant.language.boolean.cookey",
				"match": "\\b(true|false)\\b"
			}, {
				"name": "constant.language.null.cookey",
				"match": "\\b(NaV)\\b"
			}, {
				"name": "storage.type.cookey",
				"match": "\\b(function|class|lambda|var|final)\\b"
			}, {
				"name": "variable.language.this.cookey",
				"match": "\\b(this)\\b"
			}, {
				"name": "variable.language.superClass.cookey",
				"match": "\\b(superClass)\\b"
			}, {
				"name": "storage.modifier",
				"match": "\\b(extends)\\b"
			}, {
				"name": "keyword.control.exit.cookey",
				"match": "\\b(exit)\\b"
			}, {
				"name": "entity.name.class.cookey",
				"match": "\\b([A-Z_][A-Za-z0-9_]*)\\b"
			}, {
				"name": "support.variable.cookey",
				"match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b"
			}]
		},

		"strings": {
			"patterns": [{
				"name": "string.quoted.double.cookey",
				"begin": "\"",
				"end": "\"",
				"patterns": [{
					"include": "#escape"
				}]
			}, {
				"name": "string.quoted.single.cookey",
				"begin": "'",
				"end": "'",
				"patterns": [{
					"include": "#escape"
				}]
			}]
		},
		"escape": {
			"name": "constant.character.escape.cookey",
			"match": "\\\\(?:m\\d+|u{.+}|.)"
		},

		"comments": {
			"patterns": [{
				"name": "comment.cookey",
				"match": "%%.*"
			}, {
				"name": "comment.block.cookey",
				"begin": "%\\*",
				"end": "\\*%"
			}]
		},

		"stmt": {
			"patterns": [{
				"match": "\\b(var|final)\\s+([A-Za-z_][A-Za-z0-9_]*)\\b",
				"captures": {
					"1": {
						"name": "storage.modifier.cookey"
					},
					"2": {
						"name": "support.variable.cookey"
					}
				}
			}, {
				"match": "\\b([A-Za-z_][A-Za-z0-9_]*)\\b\\s*\\(",
				"captures": {
					"1": {
						"name": "support.function.cookey"
					}
				}
			}]
		},

		"decl": {
			"patterns": [{
				"name": "keyword.control.cookey",
				"match": "\\b(if|el|while|forrep|for)\\b"
			}, {
				"match": "\\b(class)\\s+([A-Za-z_][A-Za-z0-9_]*)(?:\\s+(extends)\\s+([A-Za-z_][A-Za-z0-9_]*))?\\b",
				"captures": {
					"1": {
						"name": "storage.type.class.cookey"
					},
					"2": {
						"name": "entity.name.class.cookey"
					},
					"3": {
						"name": "storage.modifier.cookey"
					},
					"4": {
						"name": "entity.name.class.cookey"
					}
				}
			}, {
				"match": "\\b(lambda)\\b\\s*\\((.*)\\)",
				"captures": {
					"1": {
						"name": "storage.type.lambda.cookey"
					},
					"2": {
						"patterns": [{
							"match": "([a-zA-Z_][a-zA-Z_0-9]*)",
							"name": "variable.parameter.cookey"
						}]
					}
				}
			}, {
				"match": "(switch|case|exit)\\s*\\(",
				"captures": {
					"1": {
						"name": "keyword.control.cookey"
					}
				}
			}]
		}
	},

	"scopeName": "source.clf"
}