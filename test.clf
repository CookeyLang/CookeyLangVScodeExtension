#!/bin
%% single-line comments
%*
multiline comments
are better!
*%

printLine("Hello\u{34}!\m312wow\n\0");
printLine('
seriously?
\n
single quoted strings are ok ig
');

forrep (i, 5, 6) {
  printLine(i);
}

for (var i = 0; i < 5; i ++) {
  printLine(i);
}

function add(a, b) {
  ret a + b;
}

if (add(5, 6) < 11) {
  printLine("5 + 6 < 11");
} el if (add(5, 6) > 11) {
  printLine("5 + 6 > 11");
} el {
  printLine("5 + 6 = 11");
}

if (true or false and true) {
  printLine("true or false and true!");
}

class Something {
  construct() {
    this.value = 5;
  }

  method() {
    printLine(this.value);
  }
}

class Other extends Something {
  construct() {
    superClass.construct();
  }
}

var myClass = Something();
final alias = Other;

final PI = 3.141592653589793238462643383279502;
final PIf = 3.14_15_9_265358979_32384626_43383279_502; %% yey
%% btw that is for cookey+ and up ^^
final myLambda = lambda (a, b): a + b;
final indeterminate = NaV;

final test = Other();
test.method ();

{
  var other;
  printLine("Hi!");
}

exit 2;

var d = 5;
deleteVariable d;

while (true) {
  break;
}

switch (false) {
  case (true) { printLine("Was true"); }

  default { printLine("Was false"); }
}

do {
  printLine("I happen once!");
} while (false);

if (5 != 5) {
  printLine("yikes!");
}

exit(5);

do {
  printLine("hi");
} while (true);

var curry = lambda (a): lambda (b): lambda (c): a + b + c;
var largeNumber = 1_2;

function callThreeTimes(fn) {
  for (var i = 0; i < 5; i++) fn();
}

callThreeTimes(lambda (): {
  printLine("Cookeylang is the best!");
});

%% todo: fix this syntax someday :(
printLine("|-5| = " + @"string":|-5|);